FORMAT: 1A

# agenda

Agenda is a simple API allowing consumers to schedule meeting on-line.


# Data Structures

## Username (string)

## User (object)

+ identifier (string) - Username
+ password (string)
+ email (string)
+ phone (string)


## Meeting (object)

+ identifier (string) - MeetingTitle
+ sponsor (Username)
+ participator (array[Username])
+ starttime (string)
+ endtime (string)



# Group Session

Resource operations related to a session in the API.

## Sessions [/v1/sessions/]

### Login [POST]

Login for a new session, in general as a registered user.

+ Request (application/json)

    + Attributes

        + username: `zhang3` (string, required)
        + password: `abc123` (string, required)


+ Response 200 (application/json)
    <!--+ Headers-->

    <!--         Set-Cookies: `zhang3_cookies=zhang3` -->

    + Body

            {
                "error": "",
                "content": "abcdefg" - Token
            }


## Session [/v1/session]

### Logout [DELETE]

Logout for a session, in general as a registered user.

+ Request

    <!--+ Headers-->

    <!--         Cookies: `zhang3_cookies=zhang3` -->
    + Body

            {
                "token": "abcdefg"
            }

+ Response 204



# Group User

Resource operations related to a user in the API.

## User [/v1/user/{identifier}]

+ Parameters
    - identifier : `n1` (string, required) - Username

### Get User by ID [GET]

+ Request

    <!--+ Headers-->

    <!--        Cookies: `zhang3_cookies=zhang3`-->
    + Body

            {
                "token": "abcdefg"
            }

+ Response 200 (application/json)

            {
                "error": "",
                "content": {
                    "username":"zhang3",
                    "email":"zhang3@mail2.sysu.edu.cn",
                    "phone":"120"
                }
            }

### Delete User by ID [DELETE]

+ Response 204


## User's Meetings [/v1/user/{identifier}/meetings{?filter}]

+ Parameters
    - identifier : `1` (string, required) - User identifier
    - filter : `sponsored` (string, optional) - filtership between the requested Meetings and the User
        - Default : `all`
        - Members
            - `all`
            - `sponsored`
            - `participated`

### List those filtered Meetings [GET]

List the Meetings matching the `filter` for the User.
+ Request

    + Headers

            Cookies: `zhang3_cookies=zhang3`

+ Response 200 (application/json)

    + Headers

            Set-Cookies: `zhang3_cookies=zhang3`

    + Body

            {
                "error": "",
                "content": [
                    {
                        "title":"iso900",
                        "participators": [
                            "zhang3",
                            "somebody",
                        ],
                        "start-time":"2015-08-05T08:40:51.620Z",
                        "end-time":"2015-10-05T08:40:51.620Z",
                    }
                ]
            }

### Delete those filtered Meetings [DELETE]

+ Response 204

     + Headers

            Set-Cookies: `zhang3_cookies=zhang3`



# Group Users

Resources related to a users in the API.

## Users Collection [/v1/users/]

### List all Users [GET]

+ Request (application/json)

    + Body

            {
                "token": "asdfasd"
            }

+ Response 200 (application/json)

    <!-- + Headers -->

    <!--        Set-Cookies: `zhang3_cookies=zhang3` -->

    + Body

            {
                "error": "",
                "content": [
                    {
                        "username": "zhang3",
                        "email": "zhang3@mail2.sysu.edu.cn",
                        "phone": "12345678"
                    },
                    {
                        "username": "li4",
                        "email": "li4@mail2.sysu.edu.cn",
                        "phone": "18520280295"
                    }
                ]
            }

### Register, Create a New User [POST]

+ Request (application/json)

    + Attributes
            + username (string, required)
            + password (string, required)

    + Body

            {
                "Username":"zhang3",
                "Password":"zhang",
                "Email":"zhang3@mail2.sysu.edu.cn",
                "phone": "12345678"
            }

+ Response 201 (application/json)

    + Attributes (User)

    + Headers

            Location: /users/1
            Set-Cookies: `zhang3_cookies=zhang3`

    + Body

            {
                "error": "",
                "content": {
                    "username":"zhang3",
                    "email":"zhang3@mail2.sysu.edu.cn",
                    "phone":"120"
                }
            }



# Group Meeting

## Meeting [/v1/meeting/{identifier}]

+ Parameters
    - identifier : `1` (string, required) - Meeting identifier

### Get Meeting by ID [GET]

+ Response 200 (application/json)

    + Headers

            Set-Cookies: `zhang3_cookies=zhang3`

    + Body


            {
                "Title":"iso900",
                "Participators": [
                    "zhang3",
                    "somebody",
                ],
                "Start-time":"2015-08-05T08:40:51.620Z",
                "End-time":"2015-10-05T08:40:51.620Z",
            }

### Delete Meeting by ID [DELETE]

+ Request
    + Headers

            Cookies: `zhang3_cookies=zhang3`

+ Response 204

### Modify Meeting by ID [PATCH]

+ Attributes

    + op (string, required) - Represent the action PATCH does
    + location (string, required) - Represent where the action occurs
    + target (string, required) - Represent the target of the action

+ Request (application/json)
    + Headers

            Set-Cookies: `zhang3_cookies=zhang3`
    + Body

            {
                "op": "remove",
                "from": "/Participators",
                "value": "somebody",
            }

+ Response 204


# Group Meetings

## Meetings Collection [/v1/meetings{?starttime,endtime}]

+ Parameters
    - starttime : `0` (number, required)
    - endtime : `1512982691720` (number, required)

### List the Meetings in given time interval [GET]
+ Request
    + Headers

            Cookies: `zhang3_cookies`


+ Response 200 (application/json)
    + Headers

            Set-Cookies: `zhang3_cookies`

    + Body


            [
                {
                    "Title":"iso900",
                    "Participators": [
                        "zhang3",
                        "somebody",
                    ],
                    "Start-time":"2015-08-05T08:40:51.620Z",
                    "End-time":"2015-10-05T08:40:51.620Z",
                }
            ]
## Meetings  [/v1/meetings]

create a meeting

### Create(Sponsor) a New Meeting [POST]

+ Request (application/json)
    + Headers

            Cookies: `zhang3_cookies`

    + Body

            {
                "Title":"iso900",
                "Participators": [
                    "zhang3",
                    "somebody",
                ],
                "Start-time":"2015-08-05T08:40:51.620Z",
                "End-time":"2015-10-05T08:40:51.620Z",
            }

+ Response 201 (application/json)

    + Headers

            Location: /meetings/iso900
            Set-Cookies: `zhang3_cookies`

    + Body

            {
                "Title":"iso900",
                "Participators": [
                    "zhang3",
                    "somebody",
                ],
                "Start-time":"2015-08-05T08:40:51.620Z",
                "End-time":"2015-10-05T08:40:51.620Z",
            }
