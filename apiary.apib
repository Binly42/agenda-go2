FORMAT: 1A

# agenda

Agenda is a simple API allowing consumers to schedule meeting on-line.


# Data Structures

## Username (string)

## User (object)

+ Identifier (string)
+ Username
+ Password (string)
+ Email (string)
+ Phone (string)


## Meeting (object)

+ Identifier (string)
+ Sponsor (Username)
+ Participator (array[Username])
+ Starttime (string)
+ Endtime (string)



# Group Session

Resource operations related to a session in the API.

## Session [/v1/session]

### Login [POST]

Login for a new session, in general as a registered user.

+ Request (application/json)
        
    + Attributes
    
        + Username: `zhang3` (string, required)
        + Password: `abc123` (string, required)
        

+ Response 200 (application/json)
    + Headers
    
            Set-Cookies: `zhang3_cookies=zhang3`
    
    + Body

            {
                "access-token": "abcdefg",
              
            }


### Logout [DELETE]

Logout for a session, in general as a registered user.

+ Request

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`


+ Response 204



# Group User

Resource operations related to a user in the API.

## User-Key [/v1/user/getkey{?Username,Password}]

+ Parameters
    - Username : `root` (string, required) - User Name
    - Password : `pass` (required)

### Get User Key [GET]

get a security key for operations later

+ Request

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`

+ Response 200 (application/json)

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`
    
    + Body
            
            {
                "key":"1e3576bt",
            }


## User [/v1/user/{Identifier}]

+ Parameters
    - Identifier : `1` (string, required) - User Identifier

### Get User by ID [GET]
+ Request

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`


+ Response 200 (application/json)

        {
            "Id" : 1,
            "Username":"zhang3",
            "Password":"zhang",
            "Email":"zhang3@mail2.sysu.edu.cn"
        }

### Delete User by ID [DELETE]

+ Request

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`

+ Response 204


## User's Meetings [/v1/user/{Identifier}/meetings{?Filter}]

+ Parameters
    - Identifier : `1` (string, required) - User Identifier
    - Filter : `sponsored` (string, optional) - filtership between the requested Meetings and the User
        - Default : `all`
        - Members
            - `all`
            - `sponsored`
            - `participated`

### List those filtered Meetings [GET]

List the Meetings matching the `filter` for the User.
+ Request

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`

+ Response 200 (application/json)
    
    + Headers
        
            Set-Cookies: `zhang3_cookies=zhang3`

    + Body

            [
                {
                    "Title":"iso900",
                    "Participators": [
                        "zhang3",
                        "somebody",
                    ],
                    "Start-time":"2015-08-05T08:40:51.620Z",
                    "End-time":"2015-10-05T08:40:51.620Z",
                }
            ]

### Delete those filtered Meetings [DELETE]

+ Response 204
    
     + Headers
        
            Set-Cookies: `zhang3_cookies=zhang3`



# Group Users

Resources related to a users in the API.

## Users Collection [/v1/users]

### List all Users [GET]
    
    
     + Headers
            
            Cookies: `zhang3_cookies=zhang3`
            

+ Response 200 (application/json)

    + Headers
        
            Set-Cookies: `zhang3_cookies=zhang3`

    + Body

            [
              {
                "Id": "1",
                "Username": "zhang3",
                "Password": "zhang",
                "Email": "zhang3@mail2.sysu.edu.cn",
                "Phone": "12345678"
              },
              {
                "Id": "2",
                "Username": "li4",
                "Password": "li",
                "Email": "li4@mail2.sysu.edu.cn",
                "Phone": "18520280295"
              }
            ]

### Register, Create a New User [POST]

+ Request (application/json)


    + Attributes
            + Username (string, required)
            + Password (string, required)

    + Headers
        
            Cookies: `zhang3_cookies=zhang3`
    + Body

            {
                "Username":"zhang3",
                "Password":"zhang",
                "Email":"zhang3@mail2.sysu.edu.cn"
            }

+ Response 201 (application/json)

    + Attributes (User)

    + Headers

            Location: /users/1
            Set-Cookies: `zhang3_cookies=zhang3`

    + Body

            {
                "Id": 1,
                "Username":"zhang3",
                "Password":"zhang",
                "Email":"zhang3@mail2.sysu.edu.cn"
            }



# Group Meeting

## Meeting [/v1/meeting/{Identifier}]

+ Parameters
    - Identifier : `1` (string, required) - Meeting Identifier

### Get Meeting by ID [GET]

+ Response 200 (application/json)

    + Headers
    
            Set-Cookies: `zhang3_cookies=zhang3`
            
    + Body
    

            {
                "Title":"iso900",
                "Participators": [
                    "zhang3",
                    "somebody",
                ],
                "Start-time":"2015-08-05T08:40:51.620Z",
                "End-time":"2015-10-05T08:40:51.620Z",
            }

### Delete Meeting by ID [DELETE]

+ Request
    + Headers
    
            Cookies: `zhang3_cookies=zhang3`

+ Response 204

### Modify Meeting by ID [PATCH]

+ Attributes

    + op (string, required) - Represent the action PATCH does
    + location (string, required) - Represent where the action occurs
    + target (string, required) - Represent the target of the action

+ Request (application/json)
    + Headers
    
            Set-Cookies: `zhang3_cookies=zhang3`
    + Body
    
            {
                "op": "remove",
                "from": "/Participators",
                "value": "somebody",
            }

+ Response 204


# Group Meetings

## Meetings Collection [/v1/meetings{?starttime,endtime}]

+ Parameters
    - starttime : `0` (number, required)
    - endtime : `1512982691720` (number, required)

### List the Meetings in given time interval [GET]
+ Request
    + Headers
    
            Cookies: `zhang3_cookies`
            

+ Response 200 (application/json)
    + Headers
    
            Set-Cookies: `zhang3_cookies`
            
    + Body
    

            [
                {
                    "Title":"iso900",
                    "Participators": [
                        "zhang3",
                        "somebody",
                    ],
                    "Start-time":"2015-08-05T08:40:51.620Z",
                    "End-time":"2015-10-05T08:40:51.620Z",
                }
            ]
## Meetings  [/v1/meetings]

create a meeting

### Create(Sponsor) a New Meeting [POST]

+ Request (application/json)
    + Headers
    
            Cookies: `zhang3_cookies`
            
    + Body

            {
                "Title":"iso900",
                "Participators": [
                    "zhang3",
                    "somebody",
                ],
                "Start-time":"2015-08-05T08:40:51.620Z",
                "End-time":"2015-10-05T08:40:51.620Z",
            }

+ Response 201 (application/json)

    + Headers

            Location: /meetings/iso900
            Set-Cookies: `zhang3_cookies`

    + Body

            {
                "Title":"iso900",
                "Participators": [
                    "zhang3",
                    "somebody",
                ],
                "Start-time":"2015-08-05T08:40:51.620Z",
                "End-time":"2015-10-05T08:40:51.620Z",
            }